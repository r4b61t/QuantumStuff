# This file is autogenerated by maturin v0.14.17
# To update, run
#
#    maturin generate-ci github -m Cargo.toml --platform all
#
name: Publish

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Upload
    runs-on: ubuntu-latest
    needs: [linux, windows, macos, sdist]
    permissions:
      # Used to upload release artifacts
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --username=__token__ --skip-existing *
      - uses: actions/download-artifact@v3
        with:
          name: wasm-wheels
          path: wasm
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            wasm/*.whl
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
